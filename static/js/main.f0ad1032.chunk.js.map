{"version":3,"sources":["Components/Statistics.js","Components/FeedbackOptions.js","Components/Section.js","Components/Notification.js","App.js","index.js"],"names":["Statistics","good","bad","neutral","total","positiveFeedback","protoType","PropTypes","number","isRequired","FeedbackOptions","props","onLeaveFeedback","options","map","item","key","id","name","type","onClick","Section","title","children","Notification","message","App","state","handleClick","e","preventDefault","target","setState","feedBackOptions","Object","values","this","reduce","acum","countTotalFeedback","toFixed","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"6RAGMA,EAAa,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,6BACE,oCACQ,8BAAOJ,IAEf,uCACW,8BAAOE,IAElB,mCACO,8BAAOD,IAEd,qCACS,8BAAOE,IAEhB,iDACqB,8BAAOC,EAAP,SAM3BL,EAAWM,UAAY,CACrBL,KAAMM,IAAUC,OAAOC,WACvBP,IAAKK,IAAUC,OAAOC,WACtBN,QAASI,IAAUC,OAAOC,WAC1BL,MAAOG,IAAUC,OAAOC,WACxBJ,iBAAkBE,IAAUC,OAAOC,YAGtBT,QCDAU,EA7BS,SAACC,GAAW,IAC1BC,EAA6BD,EAA7BC,gBAAiBC,EAAYF,EAAZE,QAEzB,OACE,6BACGA,EAAQC,KAAI,SAACC,GAAD,OACX,4BACEC,IAAKD,EAAKE,GACVC,KAAMH,EAAKG,KACXC,KAAK,SACLC,QAASR,GAERG,EAAKG,WCEDG,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACE,gCAAMD,EAAN,KACCC,ICGQC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAMA,IC8DAC,E,4MA3DbC,MAAQ,CACN1B,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGP0B,YAAc,SAACC,GACbA,EAAEC,iBADiB,IAEXZ,EAASW,EAAEE,OAAXb,KACR,EAAKc,SAAL,eAAiBd,EAAO,EAAKS,MAAMT,GAAQ,K,EAiB7Ce,gBAAkB,CAChB,CAAEhB,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,WACf,CAAED,GAAI,EAAGC,KAAM,Q,mEAbf,OAJcgB,OAAOC,OAAOC,KAAKT,OAAOU,QAAO,SAACC,EAAM9B,GACpD,OAAO8B,EAAO9B,IACb,K,wDAUH,OAJiB4B,KAAKT,MAAd1B,KAC0BmC,KAAKG,qBAAwB,KAAKC,QAClE,K,+BAWF,OACE,6BACE,kBAAC,EAAD,CAASlB,MAAO,yBACd,kBAAC,EAAD,CACET,QAASuB,KAAKH,gBACdrB,gBAAiBwB,KAAKR,eAG1B,kBAAC,EAAD,CAASN,MAAO,cACbc,KAAKG,qBAAuB,EAC3B,kBAAC,EAAD,CACEtC,KAAMmC,KAAKT,MAAM1B,KACjBE,QAASiC,KAAKT,MAAMxB,QACpBD,IAAKkC,KAAKT,MAAMzB,IAChBE,MAAOgC,KAAKG,qBACZlC,iBAAkB+B,KAAKK,oCAGzB,kBAAC,EAAD,CAAchB,QAAQ,4B,GApDhBiB,a,MCDlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f0ad1032.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, bad, neutral, total, positiveFeedback }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback: <span>{positiveFeedback} %</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.protoType = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = (props) => {\r\n  const { onLeaveFeedback, options } = props;\r\n\r\n  return (\r\n    <div>\r\n      {options.map((item) => (\r\n        <button\r\n          key={item.id}\r\n          name={item.name}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2> {title} </h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div>{message}</div>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Statics from \"./Components/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Section from \"./Components/Section\";\nimport Notification from \"./Components/Notification\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    const { name } = e.target;\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n  countTotalFeedback() {\n    const total = Object.values(this.state).reduce((acum, number) => {\n      return acum + number;\n    }, 0);\n\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const positiveFeedback = ((good / this.countTotalFeedback()) * 100).toFixed(\n      0\n    );\n    return positiveFeedback;\n  }\n  feedBackOptions = [\n    { id: 1, name: \"good\" },\n    { id: 2, name: \"neutral\" },\n    { id: 3, name: \"bad\" },\n  ];\n\n  render() {\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={this.feedBackOptions}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback() > 0 ? (\n            <Statics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}